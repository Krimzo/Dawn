use "..\somefolder\somefile.fxdn";


fn test_add(int value, int adder): int {
    if value > adder {
        eval value + adder;
    }
    eval 0;
}

fn test_print(int value) {
    print(test_add(value, 5));
}

type Float2 {
    pub float x;
    pub float y;

    pub Float2() {
        x = 0.0;
        y = 0.0;
    }
    pub Float2(float a) {
        x = a;
        y = a;
    }
    pub Float2(float x, float y) {
        self:x = x;
        self:y = y;
    }
    
    pub add(Float2 obj): Float2 {
        eval Float2(x + obj:x, y + obj:y);
    }
    pub sub(Float2 obj): Float2 {
        eval Float2(x - obj:x, y - obj:y);
    }
    
    pub static new(float x, float y): Float2 {
        eval Float2(x, y);
    }
}

fn +(Float2 left, Float2 right): Float2 {
    eval left:add(right);
}
fn -(Float2 left, Float2 right): Float2 {
    eval left:sub(right);
}

fn main() {
    int a = 2;
    float b = 3.0;
    int c = 5.0; float d = 6;
    byte e = 25;
    
    char who = 'U';
    
    $ scope test $ {
         float e = 2.0;
         d = a * 2.0 + e * c;
         b = int(d) % 2 + 5.0;
    
         String! funny = "HAHA";
         String maybe = funny + ", maybe?";
    }
    
    $ some comment $
    
    loop 10: i {
        if i == 7 {
            skip;
        }
        elif test_add(i, 5) > 12 {
            stop;
        }
        else {
            print(i);
        }
    }
    
    int[] arr = [1, 2, 3];
    loop arr: value {
        test_print(value);
    }
    
    int switch_test = 6;
    switch switch_test {
        case 1, 2, 3 {
            print("it's 1, 2 or 3");
        }
        case 4 {
            print("it's 4");
        }
        case 5 {
            print("it's 5");
        }
        else {
            print("it's something i don't know");
        }
    }
    
    Float2? something = none;
    if !something? {
        something = Float2:new(1, 2);
    }
    
    Float2 vector = Float2(1.0, 2.0);
    vector:x = 5.0 ^ 3;
    print(vector:x);
    
    Float2[] vec_array = [];
    int vec_array_len = vec_array:length();
    
    $ more comments... $
}
