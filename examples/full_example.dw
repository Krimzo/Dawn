// Primitive
func primitive_examp() {
	// Bool
	let b0 = false
	let b1 = !b0 && i >= 0

	// Integer
	let i = -10 // [-9223372036854775808, 9223372036854775807]

	// Float
	let f = 6.0 // [2.2250738585072014E-308, 1.7976931348623158E+308]

	// Char
	let t0 = 'd'

	// String
	let t1 = "nice"
}

// Variable
let a = 16	 // constant, int, 5
var b = 23.0 // variable, int, 6

// Array
func array_examp() {
	let data0 = int[10]   // array, 10 elements, values 0
	let data2 = [4, 5, 6] // array,  3 elements, values [4, 5, 6]
}

// Bracket
func bracket_examp() {
	//T{}            // struct init
	//T(value)       // cast to T
	//t()            // function call
	//T[value]       // array init
	//t[index]       // array access
}

// Function
func func_examp(a) {
	return a * a
}

// Logic
func logic_examp() {
	let a = (5 + 1.0) * 2.
	if a < 10.0 {
		print("res = " + string(a))
	}
	elif a <= 15.0 {
		print("it's less or equal to 15")
	}
	else {
		print("it's more than 15")
	}
}

// Switch
func switch_examp() {
	let value = 16
	switch value {
		case 1, 2, 3 {
			print("it's 3")
		}
		case 14 {
			print("it's 14")
		}
		default {
			print("it's something that im not aware of")
		}
	}
}

// For
func for_examp() {
	for i: ~10 {
		print(i)
	}
	for i: 3~6 {
		print(i)
	}
	for c: "some text" {
		print(c)
	}
	for value: int[5] {
		print(value)
	}
}

// While
func while_examp() {
	var counter = 0
	while counter < 10 {
		if counter == 6 {
			break
		}
		counter += 1
	}
}

// Loop
func loop_examp() {
	loop {
		print("One loop run")
		break
	}
}

// Enum
enum ExampleEnum {
	me(0.0),
	you("1.1"),
	them(2.2),
}

func enum_examp() {
	let someone = ExampleEnum->me
	let someone_else = ExampleEnum->you
	let value = someone->val
}

// Struct
struct Person {
	name,
	age,

	func get_age() {
		return self->age
	}

	func who() {
		print(self->name)
	}
}

func struct_examp() {
	var people = []
	people->push(Person{})
	people->push(Person{ name: "Krim", age: 23 })

	for let person: people {
		print(person->get_age())
	}
}
